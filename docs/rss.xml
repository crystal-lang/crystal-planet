<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Crystal News Planet</title><link>https://planet.crystal-lang.org/</link><description>Liveboat RSS Feed</description><item><title>Inquiry About Contributing to Korean Crystal Documentation</title><link>https://forum.crystal-lang.org/t/inquiry-about-contributing-to-korean-crystal-documentation/8333</link><author>hahwul</author><category>community</category><pubDate>Mon, 11 Aug 2025 00:53:33 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[Could anyone provide information about the correct repository linked to the kr domain or point me to the right resources for contributing to the Korean translation?Additionally, based on the URL, it appears that the repository might be a personal one. I think it would be better to manage it under an organization account, similar to https://github.com/crystal-french, for better collaboration and maintenance. Any thoughts on this? Thank you!]]></content:encoded></item><item><title>Should &apos;embedded Crystal&apos; be Crystal?</title><link>https://forum.crystal-lang.org/t/should-embedded-crystal-be-crystal/8330</link><author>Barney</author><category>community</category><pubDate>Sat, 9 Aug 2025 15:21:08 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I recently noticed that  files are read as  by github’s linguist, and subsequently by Go-Enry, which is based on linguist.This results in pure crystal projects with config files using embedded crystal listing HTML on code forges.I opened an issue to change  recognition to crystal, but I’m curious what you think.]]></content:encoded></item><item><title>Field study of fiber-local storage</title><link>https://forum.crystal-lang.org/t/field-study-of-fiber-local-storage/8325</link><author>straight-shoota</author><category>community</category><pubDate>Sat, 9 Aug 2025 09:46:37 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[We’re planning to add a stdlib API for fiber-local storage, which is a critical component for concurrent applications.With the need for such a feature and the absence of an official API, Crystal libraries have adopted several custom implementations in order to get things working. But they’re often subpar (in general; they might be fine for the specific use case).The goal is to implement a solid and efficient standard API to replace all currently used makeshift alternatives.In order to understand  Crystal libraries use fiber local storage, I digged through publicly available sources and I’m going to list my findings here. It’s actually quite a large amount of shards using some form of fiber-local storage.I’ve looked for some specific patterns which are commonly associated with fiber-local storage implementations. It’s likely that I missed some more unique implementations. Please add missing use cases in a comment!
I appreciate any comments on the exploration and classification. Do you think it makes sense?This study is intended to inform an RFC about fiber-local storage API for Crystal’s standard library.All implementations I found use one of two base mechanism. Of course, each individual implementation may add different amounts of convenience wrapper around.class Fiber
  property my_fls : String?
end

Fiber.current.my_fls = "foo"
Monkey patching additional properties into  is not ideal. There’s no direct danger besides name clashes with other libraries which do the same. But it’s also not a clean solution.This is equivalent to a class variable, so there’s no direct  mapping.

List of implementations (click for more details)Hash mapping  instances to valuesfibers = Hash(Fiber, String).new.compare_by_identity

MyFLS.fibers[Fiber.current] = "foo"
The hash can be a class or instance property. The latter allows  mappings which is necessary for some use cases (such as connection pools).Some hashes use  instead of the  instance as the key. I’m not sure what’s the point of that. Maybe this predates ?
List of implementations (click for more details)Extra: Thread Local StorageThe different use cases can be classified into several categories:I think there are two different modes of how fiber local variables are used:A fixed property assigned to a fiber. It has exactly one value per fiber (or none through lazy initialization) and that value is unique per fiber. It must not be inherited by child fibers (structured concurrency).
Example: Pool checkouts, transactions, recursion detectionA scoped property which may change over time. Assignments are usually scoped to a specific range of execution, and may be inherited by child fibers (structured concurrency)
Example: observability contexts, configurationA challenge for the stdlib API is how to suit the needs for both of these modes.It’s also important to clarify what are  appropriate use case for fiber-local storage.
I think it is primarily intended for matters of code structure (such as a DB transaction is checked out to one specific strain of execution, i.e. a fiber).12 posts - 5 participants]]></content:encoded></item><item><title>Embedding the Crystal Compiler in Your Program</title><link>https://dev.to/kojix2/embedding-the-crystal-compiler-in-your-program-2ief</link><author>kojix2</author><category>blog</category><pubDate>Sat, 9 Aug 2025 09:46:26 +0000</pubDate><source url="https://dev.to/t/crystal">DEV Community: crystal</source><content:encoded><![CDATA[First, create a new Crystal project.crystal init app duck_egg
duck_egg
Edit the  file as follows.
In this example, we add  and  to the  section.Create  and add the following code.In this program, the Crystal compiler is embedded in the target 🥚.
When 🥚 is executed, a random bird is selected.
The embedded compiler generates a binary that displays the bird and its sound.First, build the program.Next, check the  environment variable to find the location of the Crystal standard library.The Crystal compiler requires the standard library even for very simple code such as .
Therefore,  must be set to include the path to the standard library.lib:/usr/local/bin/../share/crystal/src
Run the generated binary:By using the Crystal compiler as a library, you can generate and compile code dynamically. This technique can be applied in many interesting ways.]]></content:encoded></item><item><title>Ambiguous use of `Time::Span` for duration and monotonic clock</title><link>https://forum.crystal-lang.org/t/ambiguous-use-of-time-span-for-duration-and-monotonic-clock/8324</link><author>straight-shoota</author><category>community</category><pubDate>Fri, 8 Aug 2025 17:09:27 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[In the discussion of RFC0014 it became apparent that the  type can lead to confusion. Its primary purpose is to represent a duration of time. But we also use it for a reading of the monotonic clock (). This makes some sense because the monotonic clock is just the time elapsed since some arbitrary point in time.But this double use leads to problems when specifying some kind of timeout or delay: A duration represents a relative distance from the current instant. A monotonic clock reading represents an absolute instant. Either semantic is valid. And the type system makes it impossible to tell them apart.The first proposal for a monotonic clock was actually for  (#3826), but somehow - after intricate discussions about involving  and whether monotonic readings are even necessary on their own - we ended up piggy-bagging  on  (#5108). I believe it was mostly for the sake of simplicity?Maybe it’s time to rethink that? Having a separate type to represent a monotonic clock reading would be very helpful for use cases such as : A  argument represents a relative duration, a  (working title) argument represents an absolute instant.The only affected stdlib API would be . It would be relatively easy to deprecate that and replace it with, for example , or .]]></content:encoded></item><item><title>Extension Methods in Crystal</title><link>https://forum.crystal-lang.org/t/extension-methods-in-crystal/8323</link><author>Haddock</author><category>community</category><pubDate>Fri, 8 Aug 2025 12:30:54 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I’m new to Crystal and from what I’ve seen so far Crystal does not have them like Ruby.Java does not have them, either. This has resulted in Java in tons of static helper methods being created in separate utility classes, which is quite annoying as it breaks OO thinking and you have to know by heard about all those static utility methods and where the are located.So “foo(bar(a))” could also be written as “a.bar().foo()“My question is whether that would be an idea for Crystal as well. Maybe it would not be that hard to tweak the Crystal compiler to implement a similar solution. I don’t know - just a question ;-).12 posts - 8 participants]]></content:encoded></item><item><title>Ld: warning: object file was built for newer macOS version than being linked</title><link>https://forum.crystal-lang.org/t/ld-warning-object-file-was-built-for-newer-macos-version-than-being-linked/8319</link><author>michaels</author><category>community</category><pubDate>Thu, 7 Aug 2025 22:27:56 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[Sorry, I wanted to reply to the other post, but being a new user I was limited to 3 replies on that topic, so I’ve raised a new one to reply.In that other post I was reporting why when doing ‘crystal run ..’ I would see so many of the following warnings:ld: warning: object file (…o0.o) was built for newer macOS version (15.0) than being linked (11.0)it was suggested by @ysbaddaden that I might need to set the env var $MACOSX_DEPLOYMENT_TARGET and I did set it to “15.5”, and reran, and found that the warnings were suppressed, which is great. However as a new crystal user, I think this is not very intuitive and wonder about the need to see those messages. Why would it be necessary to set this var? Is it possible to invert the situation so those are suppressed by default and enable a var or flag to show those? Thanks.]]></content:encoded></item><item><title>Writing SIMD in Crystal with Inline Assembly</title><link>https://dev.to/kojix2/writing-simd-in-crystal-with-inline-assembly-1lkp</link><author>kojix2</author><category>blog</category><pubDate>Thu, 7 Aug 2025 01:28:30 +0000</pubDate><source url="https://dev.to/t/crystal">DEV Community: crystal</source><content:encoded><![CDATA[In this article, we explore how to write SIMD instructions—SSE for x86\64 and NEON for AArch64—using inline assembly in the Crystal programming language.
Crystal uses LLVM as its backend, but it doesn’t yet fully optimize with SIMD.
This is not a performance tuning guide, but rather a fun exploration into low-level programming with Crystal.Crystal provides the  keyword for writing inline assembly. The syntax is based on LLVM's integrated assembler.: LLVM-style assembly code: Registers that will be modified: Optional (e.g., )
  
  
  Types of SIMD Instructions
 for Intel and AMD CPUs (x86_64) for ARM CPUs (like Apple Silicon)General-purpose: , , , , , , , , 
  
  
  Registers Used in AArch64 (NEON)
 = 8 × 16-bit half-precision floats
  
  
  Examples of Register Specification
LLVM assigns SSE registers automaticallyNEON requires explicit register naming in inline assembly  crystal build  llvm-ir foo.cr
  crystal build  asm foo.cr
Use of  and  for low-level memory access
  
  
  Examining LLVM-IR and Assembly
To inspect LLVM IR output:crystal build your_file.cr  llvm-ir crystal build your_file.cr  asm You’ll see that your inline  blocks are preserved as-is, even with optimizations ().Lloh2300:
        ldr     q1, [x9, lCPI312_43@PAGEOFF]
        add     x8, sp, #164
        add     x9, sp, #128
        str     q0, [sp, #128]
        stur    q1, [x29, #-128]
        ; InlineAsm Start
        ld1.4s  { v0 }, [x9]
        ld1.4s  { v1 }, [x10]
        fadd.4s v2, v0, v1
        st1.4s  { v2 }, [x8]
        ; InlineAsm End
        ldr     q0, [x25]
        str     q0, [sp, #16]
When using SIMD with parallelism, memory bandwidth can become the bottleneck.
Although Crystal currently runs single-threaded by default, true parallelism is in progress, and memory limitations may become relevant in the future.We’ve explored how to write SIMD operations in Crystal using inline , and examined how those instructions are lowered into LLVM IR and eventually into assembly.This was a deep dive into low-level Crystal.
  
  
  Appendix: SIMD Instruction Reference
Load/store 4 × Float32 (unaligned)Load/store 4 × Float32 (aligned)Load/store 4 × Int32 or 8 × Int16Store scalar Float32 (lowest lane)Horizontal add of Float32 pairsElement-wise max (Float32)Shuffle Float32 lanes (for reduction)Load vector (e.g. , )Pairwise add (Float32 reduction)Pairwise max (Float32 reduction)Vector-wide add (optional)Vector-wide max (optional)SSE's  and  require 16-byte alignment.NEON's ,  reduce in two steps: 4 → 2 → 1. is used with masks like ,  for reordering lanes during reduction.Saturated arithmetic (, ) clamps values on overflow.Thanks for reading — and happy crystaling! 💎]]></content:encoded></item><item><title>Crystal: Claude Code Needs an Agent Management Platform, Not an IDE</title><link>https://github.com/stravu/crystal</link><author>jbentley1</author><category>HN</category><category>hn</category><pubDate>Wed, 6 Aug 2025 14:40:26 +0000</pubDate><source url="https://news.ycombinator.com/newest">Hacker News - Newest: &quot;Crystal&quot;</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>Is there a way to tell apart if I&apos;m running a script from Ruby vs Crystal?</title><link>https://forum.crystal-lang.org/t/is-there-a-way-to-tell-apart-if-im-running-a-script-from-ruby-vs-crystal/8317</link><author>Fryguy</author><category>community</category><pubDate>Wed, 6 Aug 2025 14:28:30 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[Sometimes when I’m trying to compare the languages, particularly for new features or changes, I’ll write a script that should work in both languages. However, sometimes I need a conditional that says “If run from Ruby do X, else if run from Crystal do Y”.  Is there something in the language that can help me with this?I instinctively reached for , but that seems to have been removed from the language in favor of , but then of course  doesn’t exist in Ruby.]]></content:encoded></item><item><title>LSP/editor experience?</title><link>https://old.reddit.com/r/crystal_programming/comments/1mhp2r4/lspeditor_experience/</link><author>/u/mister_drgn</author><category>community</category><pubDate>Mon, 4 Aug 2025 20:39:43 +0000</pubDate><source url="https://old.reddit.com/r/crystal_programming/">r/crystal_programming</source><content:encoded><![CDATA[I've been going over Crystal for the last several days, and it seems like a fascinating language. The biggest concern, it seems, is the editor experience, because if you're going to depend on the compiler to figure out your types for you, it would be great to know what types it settled on.I tried crystal out by installing it (v1.16.3, via nix), opening vs code, and installing the "Crystal Language" extension. This gives me syntax highlighting and autocomplete for basic terms, but that's about it. It definitely isn't picking up syntax errors.Is there a way to improve this? I dunno if there's another package I should install. I tried looking around for crystal LSP, but didn't find much that was promising--some mentions of crystalline, which appears to be defunct.In particular, I'm guessing there's no way for my editor to be able to tell me the inferred types for a function like this?def double(x) puts x + x end ]]></content:encoded></item><item><title>Https://marioarias.hashnode.dev/a-response-to-the-luajit-is-wicked-fast-video</title><link>https://forum.crystal-lang.org/t/https-marioarias-hashnode-dev-a-response-to-the-luajit-is-wicked-fast-video/8312</link><author>MarioAriasC</author><category>community</category><pubDate>Mon, 4 Aug 2025 18:31:48 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[A short blogpost about luajit, C and Crystal12 posts - 4 participants]]></content:encoded></item><item><title>Checking to see if a connection is writeable with epol</title><link>https://forum.crystal-lang.org/t/checking-to-see-if-a-connection-is-writeable-with-epol/8311</link><author>bmmcginty</author><category>community</category><pubDate>Mon, 4 Aug 2025 16:37:55 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I’ve got a connection generated by a C library (LibPQ).
It returns an FD (which is either a socket or pipe).
I need to see if that fd is writable via the event loop, and then call a function in the C library to let it process data from/to the connection.
With libevent, the below script works, but with epol it fails. I wonder if there’s something I need to be calling to “clear” the writeable status?
Also, I know this method is kind of internal, so I’m open to other suggestions.require "socket"

spawn do
  while 1
    puts "ping"
    sleep 5.seconds
  end
end

puts Crystal::EventLoop.current.class.name
io = TCPSocket.new("localhost", 80)
Crystal::EventLoop.current.wait_writable(io)
puts "waited"
Crystal::EventLoop.current.wait_writable(io)
puts "waited 2"
sleep
$ CRYSTAL_OPTS=-Devloop=libevent crystal build a.cr && ./a
Crystal::EventLoop::LibEvent
ping
waited
waited 2
ping
^C
$ CRYSTAL_OPTS= crystal build a.cr && ./a
Crystal::EventLoop::Epoll
ping
ping
^C
]]></content:encoded></item><item><title>Marten 0.6 has been officially released!</title><link>https://old.reddit.com/r/crystal_programming/comments/1mgqqiz/marten_06_has_been_officially_released/</link><author>/u/ellmetha</author><category>community</category><pubDate>Sun, 3 Aug 2025 18:33:50 +0000</pubDate><source url="https://old.reddit.com/r/crystal_programming/">r/crystal_programming</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>Marten 0.6 has been officially released!</title><link>https://forum.crystal-lang.org/t/marten-0-6-has-been-officially-released/8309</link><author>ellmetha</author><category>community</category><pubDate>Sun, 3 Aug 2025 18:32:07 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I am pleased to announce that Marten  has been officially released! Marten is a Crystal web framework that makes building web applications easy, productive, and fun. The latest  release of the framework brings significant enhancements, including the ability to define localized routes, support for annotations, array fields for schemas, and support for image fiels for models and schemas. These features make building apps with Marten smoother and more flexible. For a detailed overview of all new features and changes, check out the full changelog.Main new features and highlights - Marten now provides the ability to define localized routes through the use of two mechanisms: automatically adding locale prefixes to routes and activating the appropriate locale based on the prefix, and translating the routes themselves. These mechanisms can be used independently or in combination in order to easily localize your application’s URLs. - Marten now lets you annotate query sets with aggregated data. This is useful when you need to “retain” aggregated values for each record in a query set (possibly for further filtering or for making use of the aggregated values when dealing with individual records). This can be achieved by using the  method. - Marten now lets you define  schema fields that allow validating lists of values, with each value subject to the validation rules of an array member field (such as , , or any other existing schema field type).Image fields for models and schemas - It is now possible to define  fields in models and schemas, which allow you to store or validate files that are indeed images.Plus many other enhancements and quality-of-life improvements — including smaller features, refinements, and fixes that make building with Marten even more enjoyable. Check out the full changelog for all the details.The Marten framework is still in its early stages, and the core team is actively seeking feedback from users interested in experimenting with it or integrating it into their projects. If you encounter any bugs or have ideas to contribute, please open an issue or start a discussion in the project’s issue tracker on GitHub or join us on Discord. Your input and contributions are greatly appreciated!If you are new to Marten, here are a few ideas on how you can get started:]]></content:encoded></item><item><title>Best language introduction?</title><link>https://old.reddit.com/r/crystal_programming/comments/1meuumc/best_language_introduction/</link><author>/u/mister_drgn</author><category>community</category><pubDate>Fri, 1 Aug 2025 12:13:43 +0000</pubDate><source url="https://old.reddit.com/r/crystal_programming/">r/crystal_programming</source><content:encoded><![CDATA[Could anyone point me towards a similar resource that covers more advanced features?]]></content:encoded></item><item><title>Initializing an Array of 1M+ elements at compile time</title><link>https://forum.crystal-lang.org/t/initializing-an-array-of-1m-elements-at-compile-time/8304</link><author>jzakiya</author><category>community</category><pubDate>Thu, 31 Jul 2025 22:26:52 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I have a method inside a loop that performs a numeric computation, that uses a constant array of 1M+ elements.  Currently, it generates this array every time it’s called.How can I generate the array at compile time so I can use it without generating the 1M+ elements at run time?]]></content:encoded></item><item><title>Have I hit compiler bugs?</title><link>https://forum.crystal-lang.org/t/have-i-hit-compiler-bugs/8303</link><author>u89012</author><category>community</category><pubDate>Thu, 31 Jul 2025 17:56:36 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[crystal version
Crystal 1.17.0 (2025-07-16)

LLVM: 20.1.8
Default target: aarch64-apple-darwin24.1.0
I’m seeing some weird behaviors and wanted to check with you all to see if these are known issues or have I run into a new compiler bug(s)?I’ve got a fairly large codebase and I’m seeing two issues:Compiler freezes sometimes for minutes with  (the longest I’ve seen when trying to understand this was ~9m), aborting and rerunning it completes the compilation in meaningful time (about ~2m). And no, it’s not downloading deps as I see the Dependencies are satisfied message.This one I’m not sure how to explain without sounding crazy – I want to believe my code is fairly straightforward for the most part since the code where I’m seeing this issue is a webapp backend doing routine backend stuff – fetching from db and sending an http response and such – the issue here is the compiler seems to happily chug along even when it sees undefined methods, what’s even puzzling is it complains with one set of args but not another, so if I had a two consecutive linesthis_method_does_not_exist(123) #compile error as expected
this_method_does_not_exist(“user_id=$1”, 123) #commenting above does not cause compiler error on this line
it only complains on the first but not the second! See below for compiler error on the first missing one just to confirm.I’m unable to share the full code at the moment but will see if I can duplicate it with a smaller example. Meanwhile I was hoping if someone has seen this before.43 posts - 10 participants]]></content:encoded></item><item><title>Trying to build for armv7</title><link>https://forum.crystal-lang.org/t/trying-to-build-for-armv7/8283</link><author>ralsina</author><category>community</category><pubDate>Thu, 24 Jul 2025 15:07:15 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[Lately there are a number of REALLY cheap development boards that I would like to use for some hardware development projects. However they are 32 bit armv7l architecture.The platforms page says it’s a tier 2 platform, so “it should work but CI doesn’t run”Is there any guide on how to try building the compiler in that platform or to build  compiler that targets that platform?]]></content:encoded></item><item><title>Unexpected arithmetic behavior</title><link>https://forum.crystal-lang.org/t/unexpected-arithmetic-behavior/8276</link><author>jzakiya</author><category>community</category><pubDate>Tue, 22 Jul 2025 21:15:02 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[This is unexpected behavior.n = 77
puts n|1 - 1    # => 77
puts (n|1) - 1  # => 76
n = 80
puts n|1 - 1    # => 80
puts (n|1) - 1  # => 80
It seems  is parsed as 31 posts - 8 participants]]></content:encoded></item><item><title>Crystal 1.17.1 is released!</title><link>https://forum.crystal-lang.org/t/crystal-1-17-1-is-released/8273</link><author>Crys</author><category>community</category><pubDate>Tue, 22 Jul 2025 10:47:20 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[We are announcing a new Crystal release 1.17.1 with a regression bug fix.]]></content:encoded></item><item><title>When a Crystal Ball Isn&apos;t Enough to Make You Rich (2024)</title><link>https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4965616</link><author>vismit2000</author><category>HN</category><category>hn</category><pubDate>Tue, 22 Jul 2025 08:21:27 +0000</pubDate><source url="https://news.ycombinator.com/newest">Hacker News - Newest: &quot;Crystal&quot;</source><content:encoded><![CDATA[]]></content:encoded></item><item><title>Crystal 1.17.1 is released!</title><link>https://crystal-lang.org/2025/07/22/1.17.0-released/</link><author>Johannes Müller</author><category>releases</category><pubDate>Tue, 22 Jul 2025 00:00:00 +0000</pubDate><source url="https://crystal-lang.org/">Releases</source><content:encoded><![CDATA[We are announcing a new Crystal release 1.17.1 with a regression bug fix.This release includes 2 changes since
1.17.0
by 2 contributors.  We thank all the contributors for all the effort put into
improving the language! ❤️This patch release only fixes a regression in the doc generator introduced in
1.17.0, which would insert links to out-of-tree files (#15996).We have been able to do all of this thanks to the continued
support of 84codes and every other
 sponsor. To maintain and increase the development pace, donations
 and sponsorships are essential.
 OpenCollective is available for
 that.Reach out to crystal@manas.tech if you’d like to
 become a direct sponsor or find other ways to support Crystal. We thank you in
 advance!Contribute]]></content:encoded></item><item><title>How further/quicker can I make this solution for a fun hackathon?</title><link>https://forum.crystal-lang.org/t/how-further-quicker-can-i-make-this-solution-for-a-fun-hackathon/8272</link><author>lukas8219</author><category>community</category><pubDate>Mon, 21 Jul 2025 16:44:21 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[Hey   I am new-comer into the language which came to my knowledge while contributing to LavinMQ.The first opportunity for me to understand the language more deeply is the Brazilian Brawl - an annual country-wide hackathon 4fun with backend challenges. This year the challenge is to write an API that can integrate with another API by which may or may-not be failing.It’s a great exercise for overall engineering and it’s all allowed.I am asking wether anyone want’s to nerd about much I can push forward for performance using Crystal.Total amount of requests + processed $$ should be consistent with your backend + the processors.My current solution and performance-points:Read API + Worker to integrate/call external APIs.The  stores in-memory SkipList to run RANGE queries with SUMNGINX load balances writes and ponts READS into the worker.What I wanted to ask and discuss:How fast can I make the p99?Is there any clear performance issues with my code regarding Crystal best practices?]]></content:encoded></item><item><title>Building Portable Crystal Binaries on macOS with GitHub Actions</title><link>https://dev.to/kojix2/how-to-distribute-a-statically-linked-crystal-binary-on-macos-with-github-actions-1gc6</link><author>kojix2</author><category>blog</category><pubDate>Mon, 21 Jul 2025 02:34:19 +0000</pubDate><source url="https://dev.to/t/crystal">DEV Community: crystal</source><content:encoded><![CDATA[If you’ve ever tried to share a Crystal tool you built, you may have noticed that distributing it on macOS isn’t as straightforward as on Linux. On Linux, you can just use the official Docker image with musl to build fully static binaries.But macOS is different. Its design doesn’t allow fully static linking, so—just like with Rust or Go—you end up with binaries that must dynamically link to system libraries. These are what we call .By default, Crystal binaries on macOS depend on Homebrew libraries like , , and . That’s not really portable. In this post, I’ll show you how to avoid those dependencies and build more portable binaries for macOS using GitHub Actions.
  
  
  How Crystal Resolves Libraries
Crystal looks for libraries in this order: environment variable from the  annotationTries the specified  nameFalls back to the library nameOnly if both fail does it use a plain  flagHere’s the catch: even if you pass static libraries via , pkg-config runs first. If it succeeds, it usually chooses shared libraries—and ignores the static ones you gave.One way around pkg-config is to symlink the static libraries and link them directly:
  
  
  Method 2: Disable PKG_CONFIG_PATH
Another trick is to simply disable pkg-config so it can’t interfere:Combining both methods is the most reliable -- especially for libraries like  and .The  runner gives you an Apple Silicon (Arm) binaryFor Intel builds, use the  runner
  
  
  Alternative: Homebrew Tap
If you want the easiest experience for users, publishing a Homebrew tap is the way to go. That way, they can build your tool from source and let Homebrew handle dependencies.Still, prebuilt binaries are handy. With the approaches above, you can distribute Crystal binaries on macOS much like you would with Rust.That’s it for today. How about sharing the Crystal tool you built over the weekend?]]></content:encoded></item><item><title>Long-range hyperbolic polaritons on a non-hyperbolic crystal surface</title><link>https://www.nature.com/articles/s41586-025-09288-1</link><author>Bluestein</author><category>HN</category><category>hn</category><pubDate>Sun, 20 Jul 2025 21:09:30 +0000</pubDate><source url="https://news.ycombinator.com/newest">Hacker News - Newest: &quot;Crystal&quot;</source><content:encoded><![CDATA[Basov, D. N., Fogler, M. M. & Garcia de Abajo, F. J. Polaritons in van der Waals materials. , aag1992 (2016).Lee, D. et al. Hyperbolic metamaterials: fusing artificial structures to natural 2D materials. , 1 (2022).Poddubny, A., Iorsh, I., Belov, P. & Kivshar, Y. Hyperbolic metamaterials. , 948–957 (2013).Yao, J. et al. Optical negative refraction in bulk metamaterials of nanowires. , 930–930 (2008).ADSCASPubMed
                    Google ScholarLiu, Z. et al. Far-field optical hyperlens magnifying sub-diffraction-limited objects. , 1686–1686 (2007).ADSCASPubMed
                    Google ScholarMa, W. et al. Ghost hyperbolic surface polaritons in bulk anisotropic crystals. , 362–366 (2021).ADSCASPubMed
                    Google ScholarConrads, L. et al. Direct programming of confined surface phonon polariton resonators with the plasmonic phase-change material InSbTe. , 3472 (2024).ADSCASPubMedPubMed Central
                    Google ScholarCaldwell, J. D. et al. Sub-diffractional volume-confined polaritons in the natural hyperbolic material hexagonal boron nitride. , 5221 (2014).ADSCASPubMed
                    Google ScholarDai, S. et al. Tunable phonon polaritons in atomically thin van der Waals crystals of boron nitride. , 1125–1129 (2014).ADSCASPubMed
                    Google ScholarLi, P. et al. Hyperbolic phonon-polaritons in boron nitride for near-field optical imaging and focusing. , 7507 (2015).ADSCASPubMed
                    Google ScholarMa, W. et al. In-plane anisotropic and ultra-low-loss polaritons in a natural van der Waals crystal. , 557–562 (2018).ADSCASPubMed
                    Google ScholarTaboada-Gutiérrez, J. et al. Broad spectral tuning of ultra-low-loss polaritons in a van der Waals crystal by intercalation. , 964–968 (2020).Sun, T. et al. Van der Waals quaternary oxides for tunable low-loss anisotropic polaritonics. , 758–765 (2024).Hu, G. et al. Real-space nanoimaging of hyperbolic shear polaritons in a monoclinic crystal. , 64–70 (2023).ADSCASPubMed
                    Google ScholarLi, P. et al. Optical nanoimaging of hyperbolic surface polaritons at the edges of van der Waals materials. , 228–235 (2017).ADSCASPubMed
                    Google ScholarD’yakonov, M. I. New type of electromagnetic wave propagating at an interface. , 714–716 (1988).Bylinkin, A. et al. Real-space observation of vibrational strong coupling between propagating phonon polaritons and organic molecules. , 197–202 (2020).Zheng, C. et al. Molding broadband dispersion in twisted trilayer hyperbolic polaritonic surfaces. , 13241–13250 (2022).Herzig Sheinfux, H. et al. High-quality nanocavities through multimodal confinement of hyperbolic polaritons in hexagonal boron nitride. , 499–505 (2024).ADSCASPubMed
                    Google ScholarHu, G., Krasnok, A., Mazor, Y., Qiu, C.-W. & Alù, A. Moiré hyperbolic metasurfaces. , 3217–3224 (2020).ADSCASPubMed
                    Google ScholarHu, G. et al. Topological polaritons and photonic magic angles in twisted α-MoO bilayers. , 209–213 (2020).ADSCASPubMed
                    Google ScholarDuan, J. et al. Multiple and spectrally robust photonic magic angles in reconfigurable α-MoO trilayers. , 867–872 (2023).ADSCASPubMed
                    Google ScholarBrar, V. W. et al. Hybrid surface-phonon-plasmon polariton modes in graphene/monolayer h-BN heterostructures. , 3876–3880 (2014).ADSCASPubMed
                    Google ScholarZeng, Y. et al. Tailoring topological transitions of anisotropic polaritons by interface engineering in biaxial crystals. , 4260–4268 (2022).ADSCASPubMed
                    Google ScholarWehmeier, L. et al. Tunable phonon polariton hybridization in a van der Waals hetero-bicrystal. , 2401349 (2024).Miller, S. et al. Lattice vibrations of yttrium vanadate. , 964–969 (1968).Bi, C. Z. et al. Far-infrared optical properties of YVO single crystal. , 167–171 (2006).Autore, M. et al. Boron nitride nanoresonators for phonon-enhanced molecular vibrational spectroscopy at the strong coupling limit. , 17172 (2018).CASPubMedPubMed Central
                    Google ScholarKim, S. et al. Van der Waals metasurfaces molding topological polaritons. , 100115 (2025).]]></content:encoded></item><item><title>Unable to return BigDecimal in resultsets</title><link>https://forum.crystal-lang.org/t/unable-to-return-bigdecimal-in-resultsets/8260</link><author>u89012</author><category>community</category><pubDate>Sat, 19 Jul 2025 12:14:13 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[Can someone please help me understand why trying to return a  in the named tuple resultset seems to fail (with can’t infer block type error) but returning a nilable BigDecimal works just fine? Please see the example code and the error message below:require "db"
require "pg"
require "big"
require "big/number"
require "big/json"

db = DB.open("postgres://foo:bar@localhost:5432/quux")
db.query_one "select 1::numeric as n", as: {n: BigDecimal} #fails to compile with BigDecimal
db.query_one "select 1::numeric as n", as: {n: BigDecimal?} #compiles ok with BigDecimal?
In src/main.cr:878:4

 878 | db.query_one "select 1::numeric as n", as: {n: BigDecimal}
          ^--------
Error: instantiating 'DB::Database#query_one(String, as: NamedTuple(n: BigDecimal.class))'


In lib/db/src/db/query_methods.cr:112:7

 112 | query_one(query, *args_, args: args) do |rs|
       ^--------
Error: can't infer block return type, try to cast the block body with `as`. See: https://crystal-lang.org/reference/syntax_and_semantics/as.html#usage-for-when-the-compiler-cant-infer-the-type-of-a-block
]]></content:encoded></item><item><title>Whoop, whoop: We have a shiny new release!</title><link>https://fosstodon.org/@CrystalLanguage/114867290783157862</link><author></author><category>official</category><pubDate>Thu, 17 Jul 2025 07:02:40 +0000</pubDate><source url="https://fosstodon.org/@CrystalLanguage">@CrystalLanguage</source><content:encoded><![CDATA[Whoop, whoop: We have a shiny new release!Crystal 1.17.0 is out now!It brings better, manual memory management for libxml2, as well as several improvements to execution contexts and Windows support.And there's a new compiler tool that reports coverage of macros.]]></content:encoded></item><item><title>Crystal 1.17.0 is released!</title><link>https://forum.crystal-lang.org/t/crystal-1-17-0-is-released/8244</link><author>Crys</author><category>community</category><pubDate>Wed, 16 Jul 2025 20:14:48 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[We are announcing a new Crystal release 1.17.0 with several new features and bug
fixes.]]></content:encoded></item><item><title>Crystal 1.17.0 is released!</title><link>https://crystal-lang.org/2025/07/16/1.17.0-released/</link><author>Johannes Müller</author><category>releases</category><pubDate>Wed, 16 Jul 2025 00:00:00 +0000</pubDate><source url="https://crystal-lang.org/">Releases</source><content:encoded><![CDATA[We are announcing a new Crystal release 1.17.0 with several new features and bug
fixes.This release includes 187 changes since
1.16.3
by 19 contributors.  We thank all the contributors for all the effort put into
improving the language! ❤️Below we list the most remarkable changes in the language, compiler and stdlib.
For more details, visit the full
changelog.The following changes break prior behavior of the compiler, but we expect them
to not break much in existing code. If you notice any unexpected issues, please
let us know in the issue tracker or forum. only on TTY by default is now the default behavior. It seems sensible to have
colorization only enabled implicitly when writing to a TTY the supports colors
(#15881).Previously, it would always be enabled unless the
 environment variable was set. Now the default
honors this variable, checks the standard streams are TTYs and  is not
, just as  did already.
The old behaviour is available by setting  explicitly:Calling  is no longer necessary, unless you want to
explicitly reset after the default is overridden.Manual memory management for The  bindings are switching to use manual memory management (#15906).There are no breaking changes in the exposed stdlib API and we do not expect any
issues if you’re only using that.
However, custom extensions that use  directly in conjunction with
stdlib API nodes may break in some specific use cases.
When linking a node into a document, it’s necessary to update the
 reference accordingly.The API methods that expose internal details of  are considered unsafe
and we’re soft-deprecating them. They’re not documented anymore, but still
continue to work.We’re planning to expose more features for DOM manipulation in the stdlib API,
so nobody has to extend the  integration themselves. As a first step,
we’re introducing  as a subclass of  for document
nodes. This is not expected to break anything.
Follow the progress in #15915.We used to plug the garbage collector as memory allocator for .
This worked well so far, but with the newest release libxml 2.14 it causes segfaults when using
multi-threading and a GC cycle happens while executing a libxml function.
In addition, the libxml2 distributed in macOS 15.4 is patched to remove the
custom memory allocators API entirely, so support for it was broken. With this change, it is now properly supported.Blocking behaviour of file descriptorsOn UNIX systems, there is no immediate effect: the existing event loops
(libevent, epoll and kqueue) keep using non-blocking mode.On Windows, we don’t set the file descriptor to non-blocking anymore. There
really is no need for that with overlapped IO. Instead, file IO is now fully
async with overlapped IO.Future event loops (such as ) may default to blocking mode.Also, the  parameter is deprecated. It’s not necessary to configure
in the constructor (#15924). It’s still possible to change the mode after
creation with .The helper method  is now a macro. This ensures it
promptly reads  from the previous lib call, without contamination
from evaluating other arguments. The macro keeps the same signature as the class
method, so we expect no friction (#15874).Execution Contexts and Multi-ThreadingExecution contexts from RFC 0002 are still a preview feature, but getting more
and more into shape.In light of upcoming changes to the relation between schedulers and threads, we
want to make it clear that execution contexts are more about the intent (“how
fibers run”) and threads are only a technical means for achieving parallelism.
As a result, we’re renaming the execution context implementations (#15936): keeps its name, it does not have a
connection to threads.With this release, we’re getting more stability. And there’s progress in related
areas, such as improving multi-threaded support for stdlib libraries like .
Work has begun on decoupling schedulers from threads which will make
it easy to react to blocking lib calls without blocking other fibers in the
execution context (#15871).Check out  for a preview of
synchronization primitives to build concurrent-safe and parallel-safe data
structures.Windows support is going steady with a number of improvements in this release:Support for Windows local device paths in  (#15590)Support for Windows system time zone transitions in all years (#15891)Fixed IANA time zone names for Windows system time zones (#15914)Macro expressions now support further expressions after an  expression:  (#15917). now raises  instead of  (#15624).
This should not break anything because it’s just a more specialized subclass.We improved the parser for TZif database files adding support for version 4
(#15825) and parsing POSIX TZ strings (#15863). POSIX TZ environment
variable strings are also supported in the  environment variable (#15792).Ensuring string suffix and prefixHelper methods for subclassesWe split  into structured sub-components, so there are
now a number of helper methods to override individual aspects in custom
subclasses (#15678).Similarly,  now has explicit  and  helper
methods for easy overriding with custom behaviour (#15545).The new CLI option  configures emitting assembly code in Intel
style (#15612).Stringification of several AST nodes has been improved: single line blocks
(#15568), multiline named tuple literals (#15566), multiline calls
(#15691), significant whitespace before a block body (#15692),  (#15919),  when stringifying  (#15918), newline in
trailing expressions (#15614), multiline (boolean) expressions (#15709),
 as call receiver (#15801).We have a new compiler tool, , which generate a code
coverage report for macros (#15738).The Crystal repo has adopted ameba for static code analysis and linting
(#15875), as well as and typos for spell checking (#15873).
With the help of these tools we have been able to improve code quality a lot,
and continue doing so with continuous testing in CI.We have been able to do all of this thanks to the continued
support of 84codes and every other
 sponsor. To maintain and increase the development pace, donations
 and sponsorships are essential.
 OpenCollective is available for
 that.Reach out to crystal@manas.tech if you’d like to
 become a direct sponsor or find other ways to support Crystal. We thank you in
 advance!Contribute]]></content:encoded></item><item><title>Memory usage of HTTP one-shot vs maintaining a persistent connection</title><link>https://forum.crystal-lang.org/t/memory-usage-of-http-one-shot-vs-maintaining-a-persistent-connection/8237</link><author>jgaskins</author><category>community</category><pubDate>Tue, 15 Jul 2025 19:58:05 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I deployed a Mastodon bot a couple weeks ago that polls a US National Weather Service RSS feed for an airport in my county and posts to Mastodon when it updates. I was using the  “one-shot” methods that spin up an HTTP connection, send the request, then terminate the connection.I expected this bot to use very little RAM (less than 10MB) because it’s  very little:Makes an HTTP request to get the RSS feedIterates over each feed item (there’s only one)If it hasn’t been posted yet (tracked by a key in Redis or a record in SQLite), make an HTTP request to the Mastodon APIWhat surprised me was that RAM consumption grew over time.The first two lines show linear memory growth. I restarted the app and it happened again. Then I tried a few more experiments:Replace SQLite with RedisReplace the RSS feed parser with using stdlib  directlyRemove all XML parsing and just use regexes (yes, I know, don’t worry about it)Compile the app using  for the specific aarch64 CPUs I’m using on GCPCap memory usage to 20MB so it’ll just restart when it exceeds itUse a persistent HTTP connectionThe first 4 didn’t do anything useful. Capping memory usage actually caused an additional problem — it caused the app to crash  persisting that it was posting to Mastodon but  actually posting.The punchline is in the image above, but after almost 24 hours using a persistent HTTP connection (with a connection pool) for both the RSS feed and the Mastodon API, memory usage has tapered at about 5MB. This is the only thing that kept RAM stable at single-digit MB.That makes me wonder if there’s something in OpenSSL (either in the version of OpenSSL itself that’s included in the 84codes Alpine-based container images or in the Crystal bindings for it) that’s causing it to leak memory. I’ve only ever seen this kind of memory growth in Ktistec, which is why I thought it might be something in SQLite but it happening when running one-shot HTTP requests would also track.Regardless of the reason, if you want to minimize memory consumption in an app that talks to other HTTP services, reusing HTTP connections will do that.]]></content:encoded></item><item><title>OpenSSL::Digest store and resume</title><link>https://forum.crystal-lang.org/t/openssl-digest-store-and-resume/8236</link><author>dup2</author><category>community</category><pubDate>Tue, 15 Jul 2025 16:41:52 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I’m trying to implement a “resumable” SHA256 digest which can be persisted and later resumed when new data arrives, the use case is a distributed uploader where the data arrives in chunks.For this, I’m trying to store a LibCrypto::EVP_MD_CTX_Struct somewhere (disk, redis) and then later resuming with a new Digest::SHA256 instance (or an extension of it as the initializer with a ctx is protected).Any pointers for this? Is this even possible? (I failed so far..)]]></content:encoded></item><item><title>Bind macro for use in web dev</title><link>https://forum.crystal-lang.org/t/bind-macro-for-use-in-web-dev/8229</link><author>u89012</author><category>community</category><pubDate>Mon, 14 Jul 2025 11:47:57 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I’ve the following macros (which works fine) which I’d like to enhance so it can be used to bind to form args as well – I’ve tried a bunch of variations but can’t seem to get it right, LLMs haven’t been helpful either (as they seem to produce code that iterates over the  which refuses to compile), can someone please help?macro bind(type)
  {{type}}.from_json(context.request.body.not_nil!)
end

macro bind(**args)
  NamedTuple({{args.double_splat}}).from_json(context.request.body.not_nil!)
end
Which can be used like so:alias User = NamedTuple(email: String, password: String, remember_me: Bool?)
#...
payload = bind(User) #works fine for predefined types

# using the second version with **args
payload = bind(email: String, password: String, remember_me: Bool?) #works fine for one off captures too
Assuming  exists (which merges ,  and ) how would one go about extending the above two macros so it handles both JSON and form params? I understand binding to form params can be tricky for nested structures but I’m hoping to get to a bare minimum version that can be useful.]]></content:encoded></item><item><title>High level LLM libraries?</title><link>https://forum.crystal-lang.org/t/high-level-llm-libraries/8221</link><author>Brunette69</author><category>community</category><pubDate>Fri, 11 Jul 2025 10:43:14 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I am working on a local RAG system.
Are there any bindings or libraries to work with smaller LLM’s directly on CPU at least. For embedding text, comparing (rerank) and summarization/gen.I tried many things.
Ollama rest api, no rerank, built upon llama.cpp.
Tried llama.cpp llama-server, embeding/pooling doesn’t work.
Tried openvino, hit a wall with pipeline setup. Needs python scripts etc.
Tried onnx, some onnx attempt by kojix also on crystal. But again I hit a wall again at tokenizing.
As I see tokenizer support is crucial.Now soome very low level libraries for ML seem to be available, but
are there any higher level libraries available in crystal?Features:
Loading/unloading a model, send text to embed, get 1 embeded vector (mean, last, cls..), rerank and generate.
Either as bindings to C/C++ or as a separate REST API fast small http server.Any info, directions, experience of yours (especially positive) would be very welcome.
Thank you in advance.]]></content:encoded></item><item><title>For 2.0: Make Default Values i64 vs i32</title><link>https://forum.crystal-lang.org/t/for-2-0-make-default-values-i64-vs-i32/8216</link><author>jzakiya</author><category>community</category><pubDate>Wed, 9 Jul 2025 17:39:11 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[It’s been about 2 decades since 64-bit systems became the dominant platform for general computing systems. Additionally, default system memory has risen from 1-2 GB to 16-32GB, with many systems providing available memory of 128GB.Currently, if you do:   its explicit definition is .
I propose making values default to , thus  defaults to be .
I primarily do numerical applications. I sometimes run into runtime arithmetic overflows because somewhere in the code is an implicit  value I have to track down and change to an  while doing a series of arithmetic operations.  This will possibly make the use of  values easier to see and use in code.This should also apply to  for , , and  , to provide better access to memory beyond  lengths|addresses.Again, since most hardware is  oriented, it’s actually more efficient|faster to use the native size structure of the hardware as much as possible to optimize compiler efficiency and output.Other languages have already (at least in part) made  values|operations their default configurations to take better advantage of hardware.
Since 2.0, by default, will introduce breaking changes, this should not be too distruptive.  Old code should work with no|little change, as values <  would operate as before.  Now, to limit sizes of values <   would require explicit type declarations, as currently necessary for values < and > .]]></content:encoded></item><item><title>Get enum underlying type in compile time</title><link>https://forum.crystal-lang.org/t/get-enum-underlying-type-in-compile-time/8215</link><author>mentalblood</author><category>community</category><pubDate>Wed, 9 Jul 2025 12:09:22 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[Is it possible to get enum underlying type in compile type (i.e. in macro)? Stuck with this trying to support enum types in storage schema providing correct storage type like UInt8/UInt16 so to reduce storage usage but also support large enums if needed]]></content:encoded></item><item><title>Sqlite3_compress: Custom compression functions in crystal-sqlite3</title><link>https://forum.crystal-lang.org/t/sqlite3-compress-custom-compression-functions-in-crystal-sqlite3/8213</link><author>plambert</author><category>community</category><pubDate>Wed, 9 Jul 2025 05:18:15 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I’ve also just released sqlite3_compress, which implements gzip, deflate, and zlib compression in SQLite user defined functions.It might serve as an example of how to implement custom functions. Or it might serve as an example of how  to do it… let me know what you think, either way!For example: db.exec "INSERT INTO my_table (url, html_gzip) VALUES (?, COMPRESS_GZIP(?))", url, html]]></content:encoded></item><item><title>Sqlite3_uri: Support URI objects in sqlite3 bindings</title><link>https://forum.crystal-lang.org/t/sqlite3-uri-support-uri-objects-in-sqlite3-bindings/8212</link><author>plambert</author><category>community</category><pubDate>Tue, 8 Jul 2025 22:01:08 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I might make a pull request to add it to crystal-sqlite3; however, if I do, it’d be a separate  as I think such things need to be conscious decisions by the programmer, and because folks might already have their own implementations.Regardless, hopefully it also serves as an example of how to do this for any class or struct.Comments, issues, pull requests, and cash donations are welcome!]]></content:encoded></item><item><title>SHAInet v3.0.1 Released!</title><link>https://forum.crystal-lang.org/t/shainet-v3-0-1-released/8209</link><author>bararchy</author><category>community</category><pubDate>Tue, 8 Jul 2025 18:25:47 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[It has been quite a while since a release of SHAInet happened.
SHAInet is a full neural network and deep learning framework made in pure crystal, it can train actual LLMs and can use CUDA for fast operations.The latest changes bring forth:GPU support for CUDA and CUDBLASLLM network support with an example training on the BabyLM Challagne.Support for GPT2\GPT3 features.Transformer layers with sinusoidal positional encodingBPE tokenizer and vocabulary trainingCross-entropy loss for language modelingCUDA acceleration (with cuDNN)Streaming datasets in JSONLAutograd, AdamW optimizerGPU-friendly mini-batch training
If you want to understand neural network more deeply but don’t want to use python or getting into huge eco-systems like PyTorch or TensorFlow.
Maybe you want to train a small model at home? or maybe you want to run some model from hugging face and run it inside crystal code?Why are you wasting your time on this project for the last 8 years?
I hold a dream about Crystal being a mainstream language or at least a more popular one, SHAInet was aimed at bringing easy to use real world deep learning into the world of Crystal, and now that the new tech moved from computer vision and simple networks into the realm of LLMs I thought that it wasn’t fair to keep us without a library that can work in that regard.
Also, I just love Crystal what can I say ;)]]></content:encoded></item><item><title>Tether invests in Crystal Intelligence for tracing blockchain transactions</title><link>https://tether.io/news/tether-announces-strategic-investment-in-crystal-intelligence-strengthening-blockchain-forensics-and-efforts-to-combat-illicit-stablecoin-activity/</link><author>wslh</author><category>HN</category><category>hn</category><pubDate>Tue, 8 Jul 2025 16:31:53 +0000</pubDate><source url="https://news.ycombinator.com/newest">Hacker News - Newest: &quot;Crystal&quot;</source><content:encoded><![CDATA[8 July 2025 – , the largest company in the digital asset industry, has made a strategic investment in Crystal Intelligence, a leading blockchain analytics firm providing advanced risk monitoring, fraud detection, and regulatory intelligence solutions. The investment represents another component of Tether’s coordinated efforts to combat illicit stablecoin use by supporting law enforcement and building a more secure and resilient digital asset ecosystem.In 2024, the FBI reported more than $9.3 billion in cryptocurrency-related scam losses in the United States, which was a 66% increase from the previous year. In response to the escalating threat environment, Tether has continued its leading role in voluntarily supporting law enforcement officials and investigations into criminals abusing stablecoin technology. To date, Tether has assisted more than 255 law enforcement agencies across 55 jurisdictions, including the U.S. Secret Service and FBI, and has frozen over $2.7 billion USD₮ tied to illicit activity.This strategic investment reinforces the investigative tools used by enforcement agencies, regulators, and institutions worldwide and builds on Tether and Crystal Intelligence’s ongoing work to enhance intelligence capabilities. Notably, both organizations have supported the development of Scam Alert (scam-alert.io), a public-facing platform that flags wallet addresses associated with scams and abusive activity in real time.“Tether is firmly committed to supporting law enforcement agencies in a shared effort to combat illicit activity,” said Paolo Ardoino, CEO of Tether. “With the latest in advanced intelligence tools, like those being developed by Crystal Intelligence, we are enhancing our ability to assist authorities in tracing the movement of funds in real time. Tether has already contributed to freezing billions in unlawful funds and has supported investigations across dozens of jurisdictions. This strategic investment will strengthen our capacity to collaborate more effectively and reinforce a clear message: USD₮ is the the digital dollar for the people, bad actors will be stopped.”“As the crypto industry matures, so must its foundations of trust and intelligence,” said Navin Gupta, CEO of Crystal Intelligence. “Tether’s backing is both a validation of the work we’ve done together and a joint commitment to future-proofing the industry through actionable insight, integrity, and innovation. We see too many players waiting for mandates. At Crystal, we believe responsible innovation means getting ahead of threats and not just reacting to them.”The investment in Crystal Intelligence complements Tether’s broader compliance-focused infrastructure strategy. Recent efforts include the integration of institutional-grade monitoring to ensure tokenized real-world assets are issued and maintained with transparency and regulatory alignment. This latest initiative reflects Tether’s ongoing commitment to proactive crime prevention, global enforcement cooperation, and the responsible growth of the digital asset ecosystem.]]></content:encoded></item><item><title>Crystal Compass</title><link>https://forum.crystal-lang.org/t/crystal-compass/8208</link><author>Crys</author><category>community</category><pubDate>Tue, 8 Jul 2025 15:09:09 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[Manas.Tech, the company behind Crystal, launches a new service: .]]></content:encoded></item><item><title>Crystal Compass</title><link>https://crystal-lang.org/2025/07/08/crystal-compass/</link><author>Johannes Müller</author><category>official</category><pubDate>Tue, 8 Jul 2025 00:00:00 +0000</pubDate><source url="https://crystal-lang.org/">Crystal Blog</source><content:encoded><![CDATA[Manas.Tech, the company behind Crystal, launches a new service:
is a paid subscription that offers technical support and code reviews from the
creators of the Crystal language.This is a service for people who use, or prepare to use, Crystal in production.
Our support service pairs production teams with Crystal experts,
providing PR reviews, architectural input, language guidance, and in general, help with the critical aspects that entails running a Crystal application.Its goal is to strengthen Crystal’s user community. We want to help both
current users and new adopters with simple and practical support.
This aims to make Crystal more attractive as a platform to build successful
products, while ensuring ongoing language development and maintenance.]]></content:encoded></item><item><title>Yes, another project: KV, a remote KVM solution</title><link>https://forum.crystal-lang.org/t/yes-another-project-kv-a-remote-kvm-solution/8207</link><author>ralsina</author><category>community</category><pubDate>Mon, 7 Jul 2025 13:49:29 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[I know, I know, I start too many things, but this one is nice!What is KV? A remote KVM.If you are familiar with PiKVMJetKVM or other similar things, they are gadgets that connect to a server and basically put them in the matrix:They capture the HDMI outputThey provide keyboard and mouse and mass storage via USBAnd then … they create a webpage where you can see the video and send keyboard and mouse input to the server. This is different from VNC or RDP in that it’s all hardware to the server, so you can remotely access the server BIOS or even install the OS to it.I got frustrated trying to figure out why no existing solution could run with my perfectly nice hardware I had in a drawer (a Radxa zero, some cables and a $5 USB dongle to capture video), so I sat down for a day and wrote it  this would not have been possible without Crystal, so thanks folks!]]></content:encoded></item><item><title>A FIRST CLASS RECOVERY HACKER THAT IS TRUSTWORTHY AND RELIABLE. THE HACK ANGELS</title><link>https://dev.to/jay_williams_fb26412ca75d/a-first-class-recovery-hacker-that-is-trustworthy-and-reliable-the-hack-angels-34fh</link><author>Jay Williams</author><category>blog</category><pubDate>Fri, 4 Jul 2025 18:25:43 +0000</pubDate><source url="https://dev.to/t/crystal">DEV Community: crystal</source><content:encoded><![CDATA[I suffered in the hands of scammers losing my crypto assets worth $380,000 to a binary option site online with so much debt on me. I seriously needed the help of a legitimate hacking firm to assist in my case. I went searching for a hacker through the Internet seeking for a possible solution to my predicament and I saw comments about THE HACK ANGELS RECOVERY EXPERT. I had to trust the reviews and contacted them to inquire about their recovery services and what it takes to hire them, they laid down their working terms and conditions which I accepted before they commenced with the recovery. I can’t thank THE HACK ANGELS RECOVERY EXPERT enough for retrieving back my funds from these heartless scammers,My sincere gratitude goes to the woman who commented on how she used THE HACK ANGELS RECOVERY EXPERT to recover her Bitcoin and return it to her wallet. If you ever find yourself in a similar predicament, I highly recommend reaching out to THE HACK ANGELS RECOVERY EXPERT. They are truly a Godsend, and their services can make a significant difference. Thank you once again, THE HACK ANGELS RECOVERY EXPERT, for restoring my lost funds. Get in touch with the team through the info below.WhatsApp +1(520)2 0 0-2 3 2 0If you're in London, you can even visit them in person at their office located at 45-46 Red Lion Street, London WC1R 4PF, UK. Don’t hesitate to reach out if you need help!]]></content:encoded></item><item><title>Process: keep the colored output</title><link>https://forum.crystal-lang.org/t/process-keep-the-colored-output/8203</link><author>Fulgurance</author><category>community</category><pubDate>Fri, 4 Jul 2025 18:10:39 +0000</pubDate><source url="https://forum.crystal-lang.org/latest">Forum</source><content:encoded><![CDATA[Hi guys, I have a question. When I use Process.run, can it be possible to keep the command output color ?For example, if I run this, the ouput is only black and white. But normally ls have a colored output:Process.run("ls", shell: true, output: Process::Redirect::Inherit)
]]></content:encoded></item></channel></rss>