{"id":"Pufd3b1W2k6wTiLsAaYmfbmYhpt2oECwmzhkA1Gmy5385NLty9yVj866","title":"Crystal Forum - Latest topics","displayTitle":"Forum","url":"https://forum.crystal-lang.org/latest.rss","feedLink":"https://forum.crystal-lang.org/latest","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":30,"items":[{"title":"Annother Spinoff Shard: ralsina/rate_limiter","url":"https://forum.crystal-lang.org/t/annother-spinoff-shard-ralsina-rate-limiter/8525","date":1761949159,"author":"ralsina","guid":37,"unread":true,"content":"<p>I am sorry, I know I create a lot of topics all at once, but it happens when I actually have some time to work on my projects <img src=\"https://emoji.discourse-cdn.com/google_classic/smiley.png?v=15\" title=\":smiley:\" alt=\":smiley:\" loading=\"lazy\" width=\"20\" height=\"20\"></p><p>Basically, it’s a generic in-memory sliding window composible rate limiter. Usage looks like this:</p><pre data-code-wrap=\"crystal\"><code># Per user rate limiting\nuser_limiter = RateLimiter.new(50, 3600)  # 50 requests per hour per user\n\n# Per IP rate limiting\nip_limiter = RateLimiter.new(200, 3600)  # 200 requests per hour per IP\n\n# Per endpoint rate limiting\nendpoint_limiter = RateLimiter.new(20, 60)  # 20 requests per minute per endpoint\n\n# Per user + endpoint rate limiting\nuser_endpoint_limiter = RateLimiter.new(10, 60)  # 10 requests per minute per user+endpoint\n\n# Check request (example: user trying to access API)\nusername = \"alice\"\nip = \"10.0.0.1\"\nendpoint = \"/api/create_note\"\n\n# Check all applicable rate limits\nlimits = [\n  user_limiter.allow?(username),\n  ip_limiter.allow?(ip),\n  endpoint_limiter.allow?(endpoint),\n  user_endpoint_limiter.allow?(\"#{username}::#{endpoint}\")\n]\n\nif limits.any?\n  # Request is allowed by all rate limiters\n  process_request(username, ip, endpoint)\nelse\n  # Request exceeds at least one rate limit\n  render_error(\"Rate limit exceeded\")\nend\n</code></pre>","contentLength":1177,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Some performance testing","url":"https://forum.crystal-lang.org/t/some-performance-testing/8524","date":1761941070,"author":"ralsina","guid":36,"unread":true,"content":"<p>As I worked on <a href=\"https://tocry.ralsina.me\" rel=\"noopener nofollow ugc\">ToCry</a> I got curious about how well it performed.</p><p>It was  built with performance as the main goal. In fact it’s sort of guaranteed not to be the fastest way to do things. It uses <a href=\"https://github.com/ralsina/sepia\" rel=\"noopener nofollow ugc\">sepia</a> as data storage, which is the opposite of efficient, and I implemented it .</p><p>On the other hand, the best thing was to just write some scripts and measure things!</p><p>Turns out … it’s pretty fast? It can have about 20 simultaneous users and 300 RPS on a Pi 4 with 4GB of RAM, and industry standard says that equates to about 200 users.</p><p>200 users? On an old SBC!</p><p> This is not scientific. What a “realistic” load is needs to be discovered by having actual users :-)</p>","contentLength":661,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Second fiber does not complete","url":"https://forum.crystal-lang.org/t/second-fiber-does-not-complete/8523","date":1761929399,"author":"axd99","guid":35,"unread":true,"content":"<p>Hi, I am experimenting with crystal’s fibers and to test with a buffered channel I wrote this:</p><pre><code># generate a list of file names.\n# This is the data source.\nlist = [] of String\n(1..4).each do |i|\n  list &lt;&lt; \"file#{i}\"\nend\n\n# provides communication between the producing fiber and the\n# consuming one.\nch = Channel(String).new(3)\n\n# fiber1\n# this fiber loads the data into the channel\n# This is the producer.\nspawn do\n  puts \"--- Entering fiber1\"\n  list.each do |val|\n    puts \"fiber1, before send #{val}\"\n    ch.send val\n    puts \"fiber1, after send #{val}\"\n  end\n  puts \"--- Exiting fiber1\"\nend\n\n# fiber2\n# this fiber empties the channel\n# This is the consumer.\nspawn do\n  puts \"---- Entering fiber 2\"\n  while val2 = ch.receive\n    puts \"Received: #{val2}\"\n  end\n  puts \"---------------------\"   # The code does not get to here\n  puts \"---- Exiting fiber2\"\n  puts \"---------------------\"\nend\n\nputs \"Starting...\\n\"\n\n# Start the fibers\nFiber.yield\n\n# When the control gets back here all data has been exhausted.\nputs \"Goodbye!!!\"\n\n# shouldn't either of these 2 restart fiber2?\nFiber.yield\nch.close \np ch.closed?\n\n\n</code></pre><p>Now, when I run the above, all data is produced and consumed as expected.\nHowever the ‘---- Exiting Fiber 2’ never executed.</p><pre><code>$ crystal list-files.cr\nStarting...\n--- Entering fiber1\nfiber1, before send file1\nfiber1, after send file1\nfiber1, before send file2\nfiber1, after send file2\nfiber1, before send file3\nfiber1, after send file3\nfiber1, before send file4\n---- Entering fiber 2\nReceived: file1\nReceived: file2\nReceived: file3\nReceived: file4\nfiber1, after send file4\n--- Exiting fiber1\nGoodbye!!!\ntrue\n</code></pre><p>Any pointer would be most welcome.\nMany thanks.</p>","contentLength":1667,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Wanna do an MCP? Try this :-)","url":"https://forum.crystal-lang.org/t/wanna-do-an-mcp-try-this/8520","date":1761767213,"author":"ralsina","guid":34,"unread":true,"content":"<p><a href=\"https://modelcontextprotocol.io/docs/getting-started/intro\" rel=\"noopener nofollow ugc\">MCP</a> is a mechanism to expose things to AI agents.</p><p>Turns out it’s super easy to do, and it gives you some amazing leverage for tools! For example, I gave my <a href=\"https://tocry.ralsina.me\" rel=\"noopener nofollow ugc\">kanban board</a> a MCP server and now I can just say “move the note “whatever” to done” and it works ;-)</p><p>It supports stdio MCP servers (nice way to expose a CLI tool to AI agents) and web MCP servers (with kemal at least)</p><p>Here is a FULL example of a MCP with a single tool, in stdio mode:</p><pre data-code-wrap=\"crystal\"><code>require \"mcp\"\n\n# A simple tool that returns the answer to any question\nclass AnswerTool &lt; MCP::AbstractTool\n  @@tool_name = \"get_answer\"\n  @@tool_description = \"Returns 42 as the answer to any question you ask\"\n  @@tool_input_schema = {\n    \"type\"       =&gt; \"object\",\n    \"properties\" =&gt; {\n      \"question\" =&gt; {\n        \"type\"        =&gt; \"string\",\n        \"description\" =&gt; \"The question you want answered\",\n      },\n    },\n    \"required\" =&gt; [\"question\"],\n  }.to_json\n\n  def invoke(params : Hash(String, JSON::Any), env : HTTP::Server::Context? = nil)\n    question = params[\"question\"]?.try(&amp;.as_s) || \"unknown question\"\n    {\n      \"answer\"   =&gt; 42,\n      \"question\" =&gt; question,\n    }\n  end\nend\n\n# Start the stdio server - that's it! One line and you have a complete MCP server.\nMCP::StdioHandler.start_server\n</code></pre><p>Have fun and let me know if something is not ergnomic, I am trying to make this as boilerplate-free as possible.</p><p><small>11 posts - 5 participants</small></p>","contentLength":1393,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Airsailer - open source Cloud orchestrator in Crystal","url":"https://forum.crystal-lang.org/t/airsailer-open-source-cloud-orchestrator-in-crystal/8516","date":1761731144,"author":"paulocoghi","guid":33,"unread":true,"content":"<p>Missed you all during my cancer treatment, and I’m finally cancer-free!</p><p>I’m back full-time at my cloud computing startup, and going fully open source (MIT license) for the entire platform.</p><ul><li>LXC (Linux/system containers) for bare-metal performance, no VM overhead (PoC working)</li><li>elastic bare-metal hardware resources that can be changed without reboot</li><li>elastic LVM storage with thin-provisioning (manually handled today)</li><li>routing for local networks + WireGuard for clusters (manually handled today)</li><li><a href=\"https://blog.cloudflare.com/workerd-open-source-workers-runtime/#homogeneous-deployment\" rel=\"noopener nofollow ugc\">Homogeneous deployment</a> as the strategy for automatic horizontal scaling and load-balancing (will be on a future release with PaaS automation)</li><li>automatic proxy + SSL for apps, no need for 1 public IP per app (<a href=\"https://github.com/admiracloud/narnia\" rel=\"noopener nofollow ugc\">proxy lib</a> temporarily made in JS because of acme-client lib)</li></ul><p> IaaS+PaaS with 20% of features that cover 80% of cloud demand.</p><p>I’m refactoring and I will release soon at <a href=\"https://github.com/airsailer/airsailer\" rel=\"noopener nofollow ugc\">github.com/airsailer/airsailer</a>. Since I sustain my family only through this work, I expect to release a new production version soon.</p><p>Happy to talk to you again. <img src=\"https://emoji.discourse-cdn.com/google_classic/slightly_smiling_face.png?v=15\" title=\":slightly_smiling_face:\" alt=\":slightly_smiling_face:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>","contentLength":1026,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Create parsor for simple if statements","url":"https://forum.crystal-lang.org/t/create-parsor-for-simple-if-statements/8514","date":1761585482,"author":"Fulgurance","guid":32,"unread":true,"content":"<p>Hi guys, I am seeking help/advice to make a very simple parser that use just  statement (I mean not with  statement or )</p><p>I did already a condition parser that work, but I don’t know how to manage if there is multiple if.</p><p>Basically, when my parser read a configuration file, I would like when it parse it to read the if statements:</p><pre data-code-wrap=\"crystal\"><code>if (condition)\n    if (condition)\n        (do this)\n    end\n    if (condition)\n        (do this)\n    end\nend\n</code></pre><p>How can I manage this ? I tried to put the problem on paper, find a way, but I actually don’t really find a solution. If someone have experience already with this, I will be grateful</p><p>In my example, if you are in the last condition, how can I know if I am not under the previous one ?</p>","contentLength":723,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Cml and choose - type problems","url":"https://forum.crystal-lang.org/t/cml-and-choose-type-problems/8509","date":1761466417,"author":"dsisnero","guid":31,"unread":true,"content":"<pre><code># =============================================================================\n# Concurrent ML `choose` type inference problem in Crystal\n# =============================================================================\n#\n# This document describes a real-world type inference limitation encountered\n# when porting John Reppy’s Concurrent ML (CML) design to Crystal language.\n#\n# The CML model centers on *events* (values of type `Event(T)`), which represent\n# potential synchronous communications or computations.  Multiple events can\n# be combined using `choose_evt` (nondeterministic choice), and only one branch\n# “commits” when synchronized via `sync(evt)`.\n#\n# The core invariant:  `choose` is purely a combinator; it doesn’t perform\n# until `sync` is called.  This design works well in SML because its type\n# inference engine easily unifies all branch result types, and events such as\n# `timeout_evt` or `never_evt` can safely coexist in a single choice.\n#\n# In Crystal, we’re very close — but there’s a key *type inference barrier*:\n#\n# -----------------------------------------------------------------------------\n# Problem Summary\n# -----------------------------------------------------------------------------\n#\n# When combining heterogeneous `Event(T)` types in an `Array`, Crystal’s type\n# inference produces a union of the *concrete generic instantiations* rather\n# than a single polymorphic supertype.  This breaks overload resolution for a\n# method like:\n#\n#     def self.choose(evts : Array(Event(T))) : Event(T) forall T\n#\n# Example:\n#\n#     ch = CML::Chan(Int32).new\n#\n#     choice = CML.choose([\n#       CML.wrap(ch.recv_evt) { |_| :recv },              # Event(Symbol)\n#       CML.wrap(CML.timeout(0.1.seconds)) { |_| :timeout }, # Event(Symbol)\n#     ])\n#\n#     # ❌ Compiler error:\n#     # expected Array(Event(Symbol)), not Array(Event(Symbol) | TimeoutEvt)\n#\n# Even though all branches *conceptually* yield `Symbol`, Crystal’s invariance\n# and separate generic instantiations mean it cannot unify them automatically.\n#\n# In SML, this works because type inference is polymorphic by default:\n#    val e1 : ’a event\n#    val e2 : unit event\n#    val choice = choose [wrap e1 (fn _ =&gt; #recv), wrap timeout_event (fn _ =&gt; #timeout)]\n#\n# -----------------------------------------------------------------------------\n# Why `never` and `timeout` amplify the issue\n# -----------------------------------------------------------------------------\n#\n# - `never_evt` is typed as `Event(T)` but never produces a value — it’s inert.\n#   In ML, this freely unifies with anything (like `’a event`).\n# - `timeout_evt` naturally yields a `Symbol` (`:timeout`) or unit.\n#   In practice, most real `choose` calls race real events against a timeout.\n#\n# In Crystal, these must share a single `T` type parameter in\n# `Array(Event(T))`, but the compiler cannot infer it when generics differ.\n#\n# -----------------------------------------------------------------------------\n# Workarounds tried\n# -----------------------------------------------------------------------------\n#\n# 1. Manual casting:\n#\n#        typed_never = CML.wrap(CML.never(Int32)) { |_| :never } as CML::Event(Symbol)\n#        choice = CML.choose([typed_never,\n#                             CML.wrap(ch.recv_evt) { |_| :recv },\n#                             CML.wrap(CML.timeout(0.1.seconds)) { |_| :timeout }])\n#\n#    ✅ Works, but ugly and non-obvious for library users.\n#\n# 2. Force the array literal type explicitly:\n#\n#        choice = CML.choose([\n#          CML.wrap(CML.never(Int32)) { |_| :never },\n#          CML.wrap(ch.recv_evt) { |_| :recv },\n#          CML.wrap(CML.timeout(0.1.seconds)) { |_| :timeout },\n#        ] of CML::Event(Symbol))\n#\n#    ✅ Works, but verbose and not ergonomic.\n#\n# 3. A dynamic fallback (library side):\n#\n#        def self.choose_any(evts : Array(Event) | Tuple)\n#          unified = evts.map do |e|\n#            CML.wrap(e.as(Event)) { |x| x.as(Symbol | Nil | Int32 | String) }\n#          end\n#          ChooseEvt(Symbol | Nil | Int32 | String).new(unified)\n#        end\n#\n#    ✅ Works, allows mixing `TimeoutEvt` and others.\n#    ⚠️ Loses static type guarantees, since all results are widened into a big union.\n#\n# -----------------------------------------------------------------------------\n# Desired behavior\n# -----------------------------------------------------------------------------\n#\n# Ideally, Crystal could unify the type variable `T` across generic parameters\n# of `Event(T)` when placed in an array, producing something like:\n#\n#     Array(Event(Symbol))  ← rather than  Array(Event(Symbol) | TimeoutEvt)\n#\n# That would allow:\n#\n#     choice = CML.choose([\n#       CML.wrap(ch.recv_evt) { |_| :recv },\n#       CML.wrap(CML.timeout(0.1.seconds)) { |_| :timeout },\n#       CML.never(Int32)\n#     ])\n#     result = CML.sync(choice)\n#\n# to compile cleanly.\n#\n# -----------------------------------------------------------------------------\n# Minimal Repro\n# -----------------------------------------------------------------------------\n#\n# ```crystal\n# module CML\n#   abstract class Event(T); end\n#\n#   class TimeoutEvt &lt; Event(Symbol); end\n#   class RecvEvt(T) &lt; Event(T); end\n#\n#   def self.choose(evts : Array(Event(T))) : Event(T) forall T\n#     # no-op\n#     evts.first\n#   end\n# end\n#\n# ch = CML::RecvEvt(Int32).new\n# choice = CML.choose([ch, CML::TimeoutEvt.new])\n# ```\n#\n# ❌ Error: expected argument #1 to 'choose' to be Array(Event(Int32)), not Array(Event(Int32) | CML::TimeoutEvt)\n#\n# -----------------------------------------------------------------------------\n# Discussion questions for Crystal core / type system developers\n# -----------------------------------------------------------------------------\n#\n# 1. Could Crystal’s generic unification rules be relaxed to allow\n#    `Array(Event(Int32) | Event(Symbol))` to unify as `Array(Event(Int32 | Symbol))`\n#    when the same generic base type is used?\n#\n# 2. Is there a way for a library to express a “variance-like” constraint\n#    on generic parameters for this pattern — e.g., `Event` being covariant in `T`?\n#\n# 3. Would a macro-level solution (`macro choose_evt(*evts)`) be able to\n#    introspect and compute a common union type of the block return values,\n#    producing an `Array(Event(common_union_type))` automatically?\n#\n# 4. Is there any pattern or compiler hint (`.splat`, `typeof(...)`) that can\n#    achieve this statically today without resorting to a huge union wrapper?\n#\n# -----------------------------------------------------------------------------\n# The goal\n# -----------------------------------------------------------------------------\n#\n# Bring Crystal’s ergonomics for typed event combinators closer to the\n# Concurrent ML model:\n#\n#     choose [timeout_evt, recv_evt, never_evt] |&gt; sync\n#\n# should “just work” without any explicit type coercion,\n# while retaining static safety and type inference fidelity.\n#\n# -----------------------------------------------------------------------------\n# Thank you!\n# -----------------------------------------------------------------------------\n#\n# Any insight or future direction for generic covariance, inference improvements,\n# or macro-based workarounds would be incredibly valuable for Crystal libraries\n# that implement higher-level concurrency abstractions like Concurrent ML.\n#\n# -- Dominic Sisneros (dsisnero)\n# -----------------------------------------------------------------------------\n\n</code></pre>","contentLength":7505,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Equivalent of Ruby's `self.class::Subclass`","url":"https://forum.crystal-lang.org/t/equivalent-of-rubys-self-class-subclass/8508","date":1761426512,"author":"Cristian","guid":30,"unread":true,"content":"<p>I would like to convert this Ruby code to Crystal:</p><pre data-code-wrap=\"ruby\"><code># Ruby code\n\nclass P\n  class Sub\n    def m\n      \"from P::Sub\"\n    end\n  end\n  \n  def sub_m\n    self.class::Sub.new.m\n  end\nend\n\n\nclass C &lt; P\n  class Sub\n    def m\n      \"from C::Sub\"\n    end\n  end\nend\n\n\nputs C.new.sub_m # =&gt; \"from C::Sub\"\n\n</code></pre><p>By using ,  returns “from C::Sub” instead of “from P::Sub”, but this syntax is not valid in Crystal: <code>Error: unexpected token: \"::\"</code></p><p><small>17 posts - 7 participants</small></p>","contentLength":454,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How can I force the type of a nested literal from the outside in?","url":"https://forum.crystal-lang.org/t/how-can-i-force-the-type-of-a-nested-literal-from-the-outside-in/8507","date":1761332308,"author":"Carlos","guid":29,"unread":true,"content":"<p>I want an array of , but</p><pre data-code-wrap=\"crystal\"><code>icr:1&gt; typeof([[\"str\"], [:sym], [\"str\", :sym]])\n =&gt; Array(Array(String | Symbol) | Array(String) | Array(Symbol))\n</code></pre><p>I can force the type of the inner arrays</p><pre data-code-wrap=\"crystal\"><code>icr:2&gt; typeof([[\"str\"] of String | Symbol, [:sym] of String | Symbol, [\"str\", :sym]])\n =&gt; Array(Array(String | Symbol))\n</code></pre><p>but I’d rather not do that, because that’s a lot of typing. I’d rather do</p><pre data-code-wrap=\"crystal\"><code>icr:3&gt; typeof([[\"str\"], [:sym], [\"str\", :sym]] of Array(String | Symbol))\nerror in line 1\nError: instantiating 'Pointer(Array(String | Symbol))#[]=(Int32, Array(String))'\n\n\nIn C:\\Users\\carlo\\scoop\\apps\\crystal\\current\\src\\pointer.cr:146:29\n\n 146 | (self + offset).value = value\n                               ^----\nError: type must be Array(String | Symbol), not Array(String)\n</code></pre><p>Shouldn’t the compiler propagate the type specification, not only from the inside out, but also from the outside in?</p>","contentLength":872,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Feasibility of multi-executable architecture for a large application using Crystal","url":"https://forum.crystal-lang.org/t/feasibility-of-multi-executable-architecture-for-a-large-application-using-crystal/8505","date":1761215553,"author":"gauravshah89","guid":28,"unread":true,"content":"<p>Crystal is my most-loved language <img src=\"https://emoji.discourse-cdn.com/google_classic/smiley.png?v=15\" title=\":smiley:\" alt=\":smiley:\" loading=\"lazy\" width=\"20\" height=\"20\"> and I have been using it for small personal projects on and off. I am now starting a new project that may not remain personal in the long-run and should eventually grow on to become a large and complex desktop app. Run time performance will be a key requirement for this application.</p><p>Since crystal has higher compile times compared to other languages, what is the best way to create very large and performant applications using crystal without getting bogged down by compile times?</p><p>My Strategy <img src=\"https://emoji.discourse-cdn.com/google_classic/smiling_face_with_sunglasses.png?v=15\" title=\":smiling_face_with_sunglasses:\" alt=\":smiling_face_with_sunglasses:\" loading=\"lazy\" width=\"20\" height=\"20\"> =&gt; Split the application into smaller  built from shared libraries rather than one monolithic Crystal binary. Rough proposed file structure given below:</p><p> will be a standalone Crystal app/lib  () that compile quickly and will be linked to each other.</p><ul><li>common/\n<ul><li>shard.yml         # shared library (types, utils)</li></ul></li><li>api/\n<ul><li>shard.yml         # depends on ../common</li></ul></li><li>worker/\n<ul><li>shard.yml         # depends on ../common</li></ul></li><li>cli/\n<ul><li>shard.yml         # minimal dependencies</li></ul></li></ul><p>Is this a scalable approach for developing and maintaining serious production applications in Crystal? If this does not work out, I will have to use Rust which I don’t prefer.</p><p>Thanks for reading this long question. <img src=\"https://emoji.discourse-cdn.com/google_classic/folded_hands.png?v=15\" title=\":folded_hands:\" alt=\":folded_hands:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>","contentLength":1187,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Crystal 1.18.2 is released!","url":"https://forum.crystal-lang.org/t/crystal-1-18-2-is-released/8504","date":1761078055,"author":"Crys","guid":27,"unread":true,"content":"<p>We are announcing a new Crystal release 1.18.2 with two regressions fixed.</p>","contentLength":74,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"LSP implementation for Crystal on Windows","url":"https://forum.crystal-lang.org/t/lsp-implementation-for-crystal-on-windows/8502","date":1761048162,"author":"god","guid":26,"unread":true,"content":"<p>The tooling for Crystal on Windows is not good. I am working on a language server and VSCode extension that leverages the existing CLI tools available and incorporates them into an instant-response context so as to achieve features such as autocomplete, real-time error detection, etc… on Windows, since Crystalline and Scry seem to be for POSIX platforms only.</p><p>Demo of its current capabilities can be observed <a href=\"https://streamable.com/2eh91i\" rel=\"noopener nofollow ugc\">here</a></p><p>Source code is <a href=\"https://github.com/navid-m/liger\" rel=\"noopener nofollow ugc\">here</a>, you can build the vsix for the vscode extension with “npm run package”, and the server itself with “shards build”.</p>","contentLength":559,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Optimization for nillable var check and code","url":"https://forum.crystal-lang.org/t/optimization-for-nillable-var-check-and-code/8501","date":1761001042,"author":"AlexR","guid":25,"unread":true,"content":"<p>Is there something terser than this:</p><pre><code>getter tex : LibSDL::Texture*?\n\ndef render\n  tex = @tex\n  return unless tex\n  LibSDL.set_texture_alpha_mod(tex, 255)\n  ...\nend\n</code></pre><p>Original code, rejected by the compiler, being :</p><pre><code>getter tex : LibSDL::Texture*?\n\ndef render\n  LibSDL.set_texture_alpha_mod(@tex.as(LibSDL::texture*), 255) if @tex\n  ...\nend\n\n# compilation error\n# Error: can't cast (Pointer(LibSDL::Texture) | Nil) to Pointer(LibSDL::Texture)\n</code></pre>","contentLength":437,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Check if an array index exist","url":"https://forum.crystal-lang.org/t/check-if-an-array-index-exist/8500","date":1760905165,"author":"Fulgurance","guid":24,"unread":true,"content":"<p>Hi guys, I am actually coding a parser, and in my program I need to check if an index exist or not in the array. I did this, but when I try to run the code, crystal raise an error that my condition have  an index out of bound, why ?</p><pre data-code-wrap=\"crystal\"><code>elsif Parser::ElseFilter.matches?(strippedLine)\n    if !elsePresence[currentIfLevel-1].nil? &amp;&amp; elsePresence[currentIfLevel-1] || elsePresence[currentIfLevel-1].nil?\n        puts elsePresence.inspect\n        puts currentIfLevel-1\n        raise(\"Line #{index+1}\\nFile: #{path}\\nExtra else: #{line}\\nAn extra \\\"else\\\" was declared.\")\n    end\n</code></pre><p>Normally because I check if it is nil, I should not have problem with my condition no ?</p>","contentLength":658,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Ruby controversy - Crystal opportunity","url":"https://forum.crystal-lang.org/t/ruby-controversy-crystal-opportunity/8498","date":1760809266,"author":"dsisnero","guid":23,"unread":true,"content":"<p><a href=\"https://forum.crystal-lang.org/u/jgaskins\">@jgaskins</a> With the recent controversy happening in ruby over Ruby Central and also DHH, it might be an opportunity for the more followed Crystal enthusiasts to re-introduce Crystal to the ruby world.</p><p><small>10 posts - 6 participants</small></p>","contentLength":224,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Creating a compiler package for Tumbleweed’s main repository (and potentially bootstrapping the compiler)","url":"https://forum.crystal-lang.org/t/creating-a-compiler-package-for-tumbleweed-s-main-repository-and-potentially-bootstrapping-the-compiler/8497","date":1760803921,"author":"expeehaa","guid":22,"unread":true,"content":"<p>I have been using openSUSE Tumbleweed for a few years now and am maintaining a small number of packages for that distribution. A few months ago I went the (probably) common route from Ruby to Crystal and have been quite happy with it. I thought about getting a Crystal compiler package into Tumbleweed’s main repository, which would have the great benefit of enabling getting packages of other programs written in Crystal into the main repository as well, apart from making the compiler install process easier.\nI found the packages at <a href=\"https://build.opensuse.org/project/show/devel:languages:crystal\" rel=\"noopener nofollow ugc\">https://build.opensuse.org/project/show/devel:languages:crystal</a> but unfortunately they just extract a prebuilt binary, which, as far as I know, is not acceptable for Tumbleweed. Additionally, even though it is on the same build service and the name looks like it, it is not a devel project for Tumbleweed (which it would need to be to submit a package).</p><p>Effectively, this means the following:</p><ol><li>Each compiler version package must be built from source.</li><li>Either <a href=\"https://build.opensuse.org/project/show/devel:languages:crystal\" rel=\"noopener nofollow ugc\">devel:languages:crystal</a> needs to become a devel project for Tumbleweed, or a new project needs to be created. (The naming conflict would need to be solved, potentially together with the Tumbleweed maintainers.)</li></ol><p>The first point is especially interesting because, if I understand correctly, up until 1.0, each compiler version needs the previous version to compile. I see 2 solutions for this problem:</p><ul><li>Bootstrap a recent compiler from the old Ruby implementation.\n</li><li>Use a prebuilt binary to compile a recent compiler in the package build process, and base packages for the following versions on that.</li></ul><p>How this has to be handled depends on the Tumbleweed maintainers. Unfortunately, I haven’t received an answer through the appropriate Matrix and Discord channels, so I guess I have to try the mailing list next.</p><p>For the second point, as per <a href=\"https://en.opensuse.org/openSUSE:How_to_contribute_to_Factory#How_to_request_a_new_devel_project\" rel=\"noopener nofollow ugc\">the openSUSE Wiki</a>, it may be as easy as writing an email to a specific mailing list. One requirement is that the  group would become a maintainer of the project. (I don’t see this as an issue, just wanted to point it out in case someone else does.)</p><p>I am not sure how both points would affect the package builds for other distributions. DPKG-based distributions could be completely unaffected, but RPM-based ones seem tricky. Their packages could also be built from source, but if that is not realistically possible for even a single one, the source-compiling Tumbleweed packages may need to be separate.\nIf it needs to be separate, I think a new subproject <code>devel:languages:crystal:Factory</code> would be most fitting, to not bother users of the existing project.</p><p>I would be willing and (probably) able to do most if not all of the packaging work (apart from what I have no permissions for). With this post I want to get the thoughts of you Crystal compiler people on that topic in general, and specifically for the following questions:</p><ol><li>What do you think about having the Crystal compiler in Tumbleweed’s main repository?</li><li>Is there a preference for changing existing package build instructions vs. having a new subproject specifically for Tumbleweed (with the option of building for openSUSE Leap as well)?</li><li>If the compiler needs to be bootstrapped, would someone be able to support me a bit in debugging? (Outside of this thread, of course.)</li></ol>","contentLength":3258,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Crystal 1.18.1 is released!","url":"https://forum.crystal-lang.org/t/crystal-1-18-1-is-released/8495","date":1760727237,"author":"Crys","guid":21,"unread":true,"content":"<p>We are announcing a new Crystal release 1.18.1 with two regressions fixed.</p>","contentLength":74,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Reactions on issues and PRs","url":"https://forum.crystal-lang.org/t/reactions-on-issues-and-prs/8490","date":1760646689,"author":"straight-shoota","guid":20,"unread":true,"content":"<p>Reactions on issues and PRs are helpful to gauge their importance.</p><p>For example, the <a href=\"https://github.com/crystal-lang/crystal/issues?q=%20is%3Aissue%20is%3Aopen%20sort%3Areactions-%2B1-desc\">list of issues sorted by <img src=\"https://emoji.discourse-cdn.com/google_classic/+1.png?v=14\" title=\":+1:\" alt=\":+1:\" loading=\"lazy\" width=\"20\" height=\"20\"> reactions</a> shows which issues people find relevant.\nWhile that’s not the only metric to determine acceptance and prioritization of a change, it can help move important stuff further ahead.</p><p>On the nix repository, I found this little detail: All PRs have a footer that encourages people to leave a reaction to show their interest in the topic.</p><p>It’s not super important. Reactions work just fine without this encouragement.\nBut it’s less organized and can be messy considering there are a number of different reactions with different meanings.</p><p>Maybe such a note could be useful. It reminds readers about leaving a reaction. And it points out the <img src=\"https://emoji.discourse-cdn.com/google_classic/+1.png?v=14\" title=\":+1:\" alt=\":+1:\" loading=\"lazy\" width=\"20\" height=\"20\"> reaction as a single metric.</p>","contentLength":783,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Incremental static typechecking","url":"https://forum.crystal-lang.org/t/incremental-static-typechecking/8485","date":1760607228,"author":"boulme","guid":19,"unread":true,"content":"<p>I am quite a newbie to Crystal. On many aspects, I find that its design is very smart. But one thing really hurts me: its type-checking is not compositional. Let me detail this on the following example:</p><pre data-code-wrap=\"crystal\"><code>def demo(c : Class) : Nil\n  a = c.new()\n  puts(\"demo on #{a.class}\")\n  (1..10).each {|x| a.push(x*x)}\n  puts(a)\nend\n\ndemo(Array(Int32))\ndemo(Array(Float64))\n</code></pre><p>This program is well-typed. But, if we add the following line, it becomes ill-typed.</p><p>And the type-checker declares an issue in the definition of  and not on the call with the issue.</p><blockquote><p>4 | (1..10).each {|x| a.push(x*x)}\n^ to ‘Array(Bool)’ to be Bool, not Int32</p></blockquote><p>In all other strongly-type language that I know, type interfaces of methods/functions are contracts: their validity is checked on function definitions - and only the type interface is used for typing function calls : this makes type-checking compositional.</p><p>This is not the case for Crystal. Type restrictions are not contract: they only restrict call contexts (and they are used as guards for multiple dispatch).</p><p>Having a non-compositional type checking has huge consequences: this makes debugging harder, this makes incremental compilation impossible, which has itself other consequences, such as very slow compilation times, and poor interactions with LSP-server.</p><p>It seems difficult to make Crystal type-checking compositional without loosing too much expressiveness. For example, on the above example we would need to make  a generic method over a type , such that  and . Including such constraints in the language and its type-checking seems really challenging. Such complex constraints might not be inferred and should be instead provided by programmers.</p><p>Moreover, backward compatibility would be broken (which can be mitigated with a flag on the compiler). But, the benefits may worth the price of these difficulties ?</p><p><small>14 posts - 6 participants</small></p>","contentLength":1863,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"TIL: crystal-pg low performance with SSL","url":"https://forum.crystal-lang.org/t/til-crystal-pg-low-performance-with-ssl/8484","date":1760539406,"author":"sdogruyol","guid":18,"unread":true,"content":"<p>I wanted to share a recent experience I had with  that might be helpful for others.</p><p>I’ve been benchmarking Crystal against Go and noticed that my Crystal implementation was performing 5-10 times slower than the Go version when running the same SQL query.</p><p>My initial tests with SQLite showed comparable performance to Go, so the bottleneck was clearly with PostgreSQL. I spent a lot of time tweaking connection parameters (, , , etc.) and even tried compiling with , but nothing seemed to close the significant performance gap.</p><p>On a whim, I added  to my connection string, and the results were instantaneous and dramatic. The performance shot up, bringing it nearly on par with the Go implementation.</p><p>I haven’t had the chance to dig into why enabling SSL has such a massive performance impact with , but the difference is night and day.</p><p>If you’re running into similar performance issues with PostgreSQL, I highly recommend giving this a try. It might just be the solution you’re looking for. I’d be curious to hear if anyone else has encountered this or has any insights into the cause.</p><p><small>11 posts - 7 participants</small></p>","contentLength":1115,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Division by Zero","url":"https://forum.crystal-lang.org/t/division-by-zero/8483","date":1760530610,"author":"Joerg","guid":17,"unread":true,"content":"<p>def div\nbegin\nrescue<p>\npp \"Division durch NULL ! \"</p>\nend</p><p>I have this little Program. I don’t understand why the rescue don’t work.</p><p>Output for 20 / 0 is Infinity but not the pp “…”</p>","contentLength":183,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Crystal 1.18.0 is released!","url":"https://forum.crystal-lang.org/t/crystal-1-18-0-is-released/8478","date":1760472646,"author":"Crys","guid":16,"unread":true,"content":"<p>We are announcing a new Crystal release 1.18.0 with several new features and bug\nfixes.</p>","contentLength":87,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Add value in empty array at specific index","url":"https://forum.crystal-lang.org/t/add-value-in-empty-array-at-specific-index/8477","date":1760433825,"author":"Fulgurance","guid":15,"unread":true,"content":"<p>Hi guys, I have a special request. I would like basically to add a value in an  array at a specific index, and if this index is out of bound (because it is empty), instead of having an error, fill up the array with empty values.</p><p>BUT if I the array is not empty, don’t overwrite the existing values, just fill the gap with empty values. Let me know if it is not clear.</p><p>This is an example of what I would like:</p><pre><code>array is an empty array of string\nWe add \"hello\" to the index 2\n\n=&gt; [\"\",\"\",\"hello\"]\n\nNow we change the value of index 1 with \"bye\"\n\n=&gt; [\"\",\"bye\",\"hello\"]\n\nNow we had again another value at index 5, with value \"good\"\n\n=&gt; [\"\",\"bye\",\"hello\",\"\",\"\",\"good\"]\n</code></pre><p>Basically this example show the behavior I would like.</p><p>Is there any method for this ?</p>","contentLength":744,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Assignments to structs fields in array are not working","url":"https://forum.crystal-lang.org/t/assignments-to-structs-fields-in-array-are-not-working/8476","date":1760284587,"author":"mentalblood","guid":14,"unread":true,"content":"<pre><code>require \"spec\"\n\nstruct S\n  property x : Int32\n\n  def initialize(@x)\n  end\nend\n\nbegin\n  s = S.new 0\n  s.x = 1\n  s.x.should eq 1 # OK\nend\n\nbegin\n  a = [] of S\n  a &lt;&lt; S.new 0\n\n  a[0].x = 1\n  a[0].x.should eq 1 # still 0\nend\n</code></pre>","contentLength":221,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Passing method as Proc to other class constuctor?","url":"https://forum.crystal-lang.org/t/passing-method-as-proc-to-other-class-constuctor/8469","date":1760160857,"author":"AlexR","guid":13,"unread":true,"content":"<p>This works but is <code>-&gt;(w : Widget) { upd_lighttable(w) }</code> (in ) idiomatic?</p><pre><code>abstract class Widget\n  abstract def update\n  abstract def render\nend\n\nabstract class UI\n  def initialize()\n    @widgets = Array(Widget).new\n    assemble\n  end\n\n  abstract def assemble\n\n  def update()\n    @widgets.each do |w|\n      w.update\n    end\n  end\n\n  def render()\n    @widgets.each do |w|\n      w.render\n    end\n  end\nend\n\nclass LabelWidget &lt; Widget\n  def initialize(@text : String, @x : Int32, @y : Int32, @handler : Proc(Widget, Nil))\n  end\n\n  def update()\n    @handler.call(self)\n  end\n\n  def render()\n    puts \"todo: #{@text} LabelWidget.render\"\n  end\nend\n\nclass MyAppUI &lt; UI\n  def assemble()\n    @widgets.push(LabelWidget.new(\" L \", 5,  5, -&gt;(w : Widget) { upd_lighttable(w) }))\n    @widgets.push(LabelWidget.new(\" P \", 5, 50, -&gt;(w : Widget) { upd_play_from_previous(w) }))\n  end\n\n  def upd_lighttable(w : Widget)\n    puts \"todo: upd_lighttable\"\n  end\n\n  def upd_play_from_previous(w : Widget)\n    puts \"todo: upd_play_from_previous\"\n  end\nend\n\n\n\n\nui = MyAppUI.new\nui.update\nui.render\n# =&gt;\n# todo: upd_lighttable\n# todo: upd_play_from_previous\n# todo:  L  LabelWidget.render\n# todo:  P  LabelWidget.render\n\n</code></pre>","contentLength":1190,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Seeking a reference to an object property","url":"https://forum.crystal-lang.org/t/seeking-a-reference-to-an-object-property/8468","date":1760137390,"author":"AlexR","guid":12,"unread":true,"content":"<p>How do you, in an instance method, parametrize a reference to the property of an instance of some other class (as opposed to its value) ? The question came as I wrote the code below (putting Observer pattern into place but am having declaration issues;  needs fixing, obviously) and I can’t quite put my finger on the idiomatic way to do this.</p><pre><code>class A\n  include Observable\n  getter some_prop : Bool = false\nend\n\nclass B\n  include Observer\n  def observe(prop : Pointer(T))\n    # todo\n  end\nend\n\na = A.new\nb = B.new\nb.observe(pointerof(a.some_prop))\n</code></pre>","contentLength":549,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Problem when splitting string with regex","url":"https://forum.crystal-lang.org/t/problem-when-splitting-string-with-regex/8467","date":1760097657,"author":"Fulgurance","guid":11,"unread":true,"content":"<p>Hi guys, I am facing a problem when I try to split a string with a regex. Basically I would like to split everytime the regex meet: “ &amp;&amp; “, “ || “ or “if “.</p><p>I did this example but the result is not as expected:</p><pre data-code-wrap=\"crystal\"><code>string = \"if adad = 2 &amp;&amp; adada = 3 || 2 = 3\"\narray = string.split(/((if\\s+)|(\\s+\\|\\|\\s+)|(\\s+\\&amp;\\&amp;\\s+))/)\n\nputs array.inspect\n</code></pre><pre><code>[\"\", \"if \", \"if \", \"adad = 2\", \" &amp;&amp; \", \" &amp;&amp; \", \"adada = 3\", \" || \", \" || \", \"2 = 3\"]\n</code></pre><pre><code>[\"adad = 2\", \"adada = 3\", \"2 = 3\"]\n</code></pre><p>I have a second question too: is it possible to split a string without deleting the chaine that split ?</p>","contentLength":569,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Trouble running multiple infinite loops (GTK + X11 + Signal listener) in parallel in Crystal","url":"https://forum.crystal-lang.org/t/trouble-running-multiple-infinite-loops-gtk-x11-signal-listener-in-parallel-in-crystal/8466","date":1760076366,"author":"VC365","guid":10,"unread":true,"content":"<p>I have an applet originally written in C, and after learning Crystal I decided to rewrite it.\nEverything went fine until I reached the part that needs multiple infinite loops running in parallel.</p><p>In the original C version I had three concurrent loops:</p><ol><li>A signal listener ()</li></ol><p>When I tried to do the same in Crystal, the program either froze, lagged, or crashed depending on which threading method I used.</p><pre data-code-wrap=\"crystal\"><code>def keys\n  Xlib.call do\n    xInitThreads()\n    dpy = xOpenDisplay(nil)\n    unless dpy\n      STDERR.puts(\"Cannot open display\")\n      return\n    end\n    root = xRootWindow(dpy, 0)\n\n    xGrabKey(dpy, xKeysymToKeycode(dpy, X11::XF86XK_AudioLowerVolume),\n             X11::AnyModifier, root, 1, X11::GrabModeAsync, X11::GrabModeAsync)\n    xGrabKey(dpy, xKeysymToKeycode(dpy, X11::XF86XK_AudioRaiseVolume),\n             X11::AnyModifier, root, 1, X11::GrabModeAsync, X11::GrabModeAsync)\n    xGrabKey(dpy, xKeysymToKeycode(dpy, X11::XF86XK_AudioMute),\n             X11::AnyModifier, root, 1, X11::GrabModeAsync, X11::GrabModeAsync)\n\n    xSelectInput(dpy, root, X11::KeyPressMask)\n    ev = uninitialized LRoot::XEvent\n\n    loop do\n      xNextEvent(dpy, pointerof(ev))\n      if ev.type == X11::KeyPress\n        keysym = xKeycodeToKeysym(dpy, ev.key.keycode, 0)\n        case keysym\n        when X11::XF86XK_AudioRaiseVolume\n          Volume.volume_up\n          Volume.update_safe(true)\n        when X11::XF86XK_AudioLowerVolume\n          Volume.volume_down\n          Volume.update_safe(true)\n        when X11::XF86XK_AudioMute\n          Volume.volume_mute\n          Volume.update_safe(false)\n        end\n      end\n    end\n  end\nend\n</code></pre><pre><code>private def pid; \"/tmp/volume-pulse.pid\"; end\n\ndef signal_root\n  File.write(pid, \"#{Process.pid}\")\n  Signal::USR1.trap { Volume.update_safe(true) }\n  sleep\nend\n\ndef signal_update\n  return unless File.exists?(pid)\n  Process.signal(Signal::USR1, File.read(pid).to_i)\nend\n</code></pre><pre data-code-wrap=\"crystal\"><code>Xlib.call do\n  notify(\"Volume Pulse\") if ConfigVariables.use_notifications\n  fcInit()\n  gtk2_init(nil, nil)\n\n  icon_tray = gtk2_status_new()\n  Volume.icon_statusX do |volume|\n    Xlib.call do\n      if Volume.get_mute\n        gtk2_status_icon_tooltip_text(icon_tray, \"Volume: Muted\")\n        gtk2_status_set_icon_name(icon_tray, \"audio-volume-muted\")\n      else\n        gtk2_status_icon_tooltip_text(icon_tray, \"Volume: #{volume}\")\n        case volume\n        when 0\n          gtk2_status_set_icon_name(icon_tray, \"audio-volume-muted\")\n        when 1..30\n          gtk2_status_set_icon_name(icon_tray, \"audio-volume-low\")\n        when 31..70\n          gtk2_status_set_icon_name(icon_tray, \"audio-volume-medium\")\n        else\n          gtk2_status_set_icon_name(icon_tray, \"audio-volume-high\")\n        end\n      end\n    end\n  end\n\n  Volume.update\n\n  g_signal_connect(icon_tray.as(LRoot::GObject*), \"scroll-event\", Event.scroll.as(LRoot::GCallback*), nil)\n  g_signal_connect(icon_tray.as(LRoot::GObject*), \"button-press-event\", Event.button.as(LRoot::GCallback*), nil)\n  g_signal_connect(icon_tray.as(LRoot::GObject*), \"popup-menu\", GUI.menu.as(LRoot::GCallback*), nil)\n\n  gtk2_main()\n  notify_uninit() if ConfigVariables.use_notifications\nend\n</code></pre><ul><li> and  — both cause freezing or crashes</li><li> and  (with ) — sometimes only part of the signals are received, or it crashes after a short time, or one of the loops stops running completely</li></ul><p>If I remove the GTK loop, everything works fine.\nBut as soon as I call , all other threads or fibers stop responding.</p><p>Is there a reliable way to run multiple native event loops (GTK, X11, signal listener) in true parallel execution in Crystal?\nOr should I move one of these loops (for example the X11 listener) into a small C helper process instead?</p><p> Crystal 1.17.1 (2025-07-22) Artix Linux (Openrc) 20.1.8 x86_64-pc-linux-gnu</p>","contentLength":3740,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Channels","url":"https://forum.crystal-lang.org/t/channels/8465","date":1760019988,"author":"jgaskins","guid":9,"unread":true,"content":"<p>I’ve been thinking lately about how the Crystal and Go ecosystems use channels as I work with things in Crystal that are commonly done with Go (such as infrastructure and NATS). One thing that I find surprising is that channels are often part of the interface for a Go API but, from what I can tell, Crystal s tend to be implementation details that aren’t exposed.</p><p>Does that match anyone else’s observations?</p><p><small>18 posts - 6 participants</small></p>","contentLength":438,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Crystal docs - crystal src errors","url":"https://forum.crystal-lang.org/t/crystal-docs-crystal-src-errors/8463","date":1759996120,"author":"dsisnero","guid":8,"unread":true,"content":"<p>when I try to run crystal docs from crystal src directory it errors</p>","contentLength":67,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["community"]}